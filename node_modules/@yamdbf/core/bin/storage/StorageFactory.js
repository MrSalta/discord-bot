"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const KeyedStorage_1 = require("./KeyedStorage");
const GuildSettings_1 = require("./GuildSettings");
const discord_js_1 = require("discord.js");
/**
 * Used for creating the different storage class mixins used throughout
 * and needed by YAMDBF Clients. Used internally, shouldn't ever
 * need to be used directly in a custom client
 * @private
 * @class StorageFactory
 * @param {Client} client The YAMDBF Client instance
 * @param {StorageProvider} guildDataStorage StorageProvider instance that provides all guild data
 * @param {StorageProvider} guildSettingStorage StorageProvider instance that provides all guild settings
 */
class StorageFactory {
    constructor(client, guildDataStorage, guildSettingStorage) {
        this._client = client;
        this._guildDataStorage = guildDataStorage;
        this._guildSettingStorage = guildSettingStorage;
    }
    /**
     * Creates a GuildStorage mixin, creating the GuildSettings instance under `.settings`
     * @param {string} id ID of the Guild to create storage for
     * @returns {Promise<GuildStorage>}
     */
    async createGuildStorage(id) {
        const guild = this._client.guilds.get(id);
        if (!guild)
            return null;
        const newStorage = new GuildSettings_1.GuildSettings(this._guildDataStorage, guild, this._client);
        newStorage.settings = new GuildSettings_1.GuildSettings(this._guildSettingStorage, guild, this._client);
        await newStorage.init();
        await newStorage.settings.init(true);
        return newStorage;
    }
    /**
     * Creates a ClientStorage mixin using KeyedStorage as a base. Adds a `guilds` Collection
     * that will map Guild IDs to GuildStorages
     * @returns {ClientStorage}
     */
    createClientStorage() {
        const storage = new KeyedStorage_1.KeyedStorage('client_storage', this._client.provider);
        storage.guilds = new discord_js_1.Collection();
        return storage;
    }
}
exports.StorageFactory = StorageFactory;

//# sourceMappingURL=StorageFactory.js.map
