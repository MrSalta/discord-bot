import { Client } from '../client/Client';
import { StorageProvider } from './StorageProvider';
import { StorageFactory } from './StorageFactory';
/**
 * Handles loading all guild-specific data from persistent storage into
 * {@link GuildStorage} objects
 * @private
 */
export declare class GuildStorageLoader {
    private readonly _client;
    private readonly _storageFactory;
    constructor(client: Client, storageFactory: StorageFactory);
    /**
     * Load data for each guild from persistent storage and store it in a
     * {@link GuildStorage} object
     */
    loadStorages(dataStorage: StorageProvider, settingsStorage: StorageProvider): Promise<void>;
    /**
     * Create GuildStorage for all guilds that do not
     * currently have one for the Client session
     */
    initNewGuilds(dataStorage: StorageProvider, settingsStorage: StorageProvider): Promise<void>;
    /**
     * Clean out any storages/settings storages for guilds the
     * bot is no longer a part of
     */
    cleanGuilds(dataStorage: StorageProvider, settingsStorage: StorageProvider): Promise<void>;
}
