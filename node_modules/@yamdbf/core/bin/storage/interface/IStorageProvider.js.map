{"version":3,"sources":["storage/interface/IStorageProvider.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;AACH;;;;;;GAMG;AACH;;;;GAIG;AACH;;;;;GAKG;AACH;;;;;;GAMG;AACH;;;;;GAKG;AACH;;;;GAIG","file":"IStorageProvider.js","sourcesContent":["/**\n * Interface for storage providers to implement, providing compile-time\n * errors for incorrect implementations alongside the abstract StorageProvider\n * class to extend which provides runtime errors for missing method implementations\n *\n * >**Note:** This is a TypeScript feature and you do not need to worry about this bit so much\n * if you are using JavaScript.\n * @interface IStorageProvider\n */\n/**\n * Async method to be run that will set up the storage provider\n * for use. Calls to other provider methods should not be made\n * until this method has been called and resolved\n * @method IStorageProvider#init\n * @returns {Promise<void>}\n */\n/**\n * Async method returning an array of stored key names\n * @method IStorageProvider#keys\n * @returns {Promise<string[]>}\n */\n/**\n * Async method that gets the value of a key in storage\n * @method IStorageProvider#get\n * @param {string} key The name of the key in storage\n * @returns {Promise<string>}\n */\n/**\n * Async method that sets the value of a key in storage\n * @method IStorageProvider#set\n * @param {string} key The name of the key in storage\n * @param {string} value The value to set in storage\n * @returns {Promise<void>}\n */\n/**\n * Async method that removes a key and its value from storage\n * @method IStorageProvider#remove\n * @param {string} key The name of the key in storage\n * @returns {Promise<void>}\n */\n/**\n * Async method that removes all keys and their values from storage\n * @method IStorageProvider#clear\n * @returns {Promise<void>}\n */\n\nexport interface IStorageProvider\n{\n\tinit(): Promise<void>;\n\tkeys(): Promise<string[]>;\n\tget(key: string): Promise<string>;\n\tset(key: string, value: string): Promise<void>;\n\tremove(key: string): Promise<void>;\n\tclear(): Promise<void>;\n}\n"],"sourceRoot":"../../../src"}