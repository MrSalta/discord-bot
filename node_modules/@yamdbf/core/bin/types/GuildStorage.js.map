{"version":3,"sources":["types/GuildStorage.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;AACH;;;;GAIG","file":"GuildStorage.js","sourcesContent":["/**\n * @classdesc Class containing asynchronous methods for storing, retrieving, and\n * interacting with data for a specific guild. Can not be created directly\n * via a constructor due to mixin mechanics. Created internally via\n * `StorageFactory#createGuildStorage`\n * @class GuildStorage\n * @mixes GuildSettings\n * @borrows GuildSettings#init as GuildStorage#init\n * @borrows GuildSettings#keys as GuildStorage#keys\n * @borrows GuildSettings#get as GuildStorage#get\n * @borrows GuildSettings#set as GuildStorage#set\n * @borrows GuildSettings#remove as GuildStorage#remove\n * @borrows GuildSettings#clear as GuildStorage#clear\n */\n/**\n * GuildSettings object containing settings for this guild\n * @name GuildStorage#settings\n * @type {GuildSettings}\n */\n\nimport { GuildSettings } from '../storage/GuildSettings';\n\nexport type GuildStorage = GuildSettings & { settings: GuildSettings };\n"],"sourceRoot":"../../src"}