{"version":3,"sources":["command/base/usagecontrol/ClearLimit.ts"],"names":[],"mappings":";;;;;;;;AACA,6CAA0C;AAC1C,2CAAwC;AACxC,4DAAyD;AAGzD,mEAAqE;AACrE,6DAA6D;AAC7D,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,iBAAiB,CAAC;AAEjD,eAAqB,SAAQ,iBAAO;IAEnC;QAEC,KAAK,CAAC;YACL,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,wCAAwC;YAC9C,KAAK,EAAE,8BAA8B;YACrC,iBAAiB,EAAE,CAAC,eAAe,CAAC;SACpC,CAAC,CAAC;IACJ,CAAC;IAIM,KAAK,CAAC,MAAM,CAAC,OAAgB,EAAE,CAAC,GAAG,EAAE,WAAW,CAA2B;QAEjF,IAAI,OAAO,GAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,WAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,WAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;QAC9G,IAAI,CAAC,OAAO;YAAE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EACxC,GAAG,CAAC,yBAAC,CAAC,8BAA8B,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QAEzD,MAAM,OAAO,GAAiB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;QACpD,IAAI,eAAe,GAAiC,MAAM,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;QACxG,OAAO,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAC1B,GAAG,CAAC,yBAAC,CAAC,sBAAsB,EAAE,EAAE,WAAW,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAChE,CAAC;CACD;AAdA;IAFC,KAAK,CAAC,uBAAU,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAC;IACnD,WAAW;uCAcX;AA3BF,4BA4BC","file":"ClearLimit.js","sourcesContent":["import { Message } from '../../../types/Message';\nimport { Util } from '../../../util/Util';\nimport { Command } from '../../Command';\nimport { Middleware } from '../../middleware/Middleware';\nimport { GuildStorage } from '../../../types/GuildStorage';\nimport { ResourceLoader } from '../../../types/ResourceLoader';\nimport { BaseStrings as s } from '../../../localization/BaseStrings';\nimport * as CommandDecorators from '../../CommandDecorators';\nconst { using, localizable } = CommandDecorators;\n\nexport default class extends Command\n{\n\tpublic constructor()\n\t{\n\t\tsuper({\n\t\t\tname: 'clearlimit',\n\t\t\tdesc: 'Clear role restrictions from a command',\n\t\t\tusage: '<prefix>clearlimit <command>',\n\t\t\tcallerPermissions: ['ADMINISTRATOR']\n\t\t});\n\t}\n\n\t@using(Middleware.expect({ '<command>': 'String' }))\n\t@localizable\n\tpublic async action(message: Message, [res, commandName]: [ResourceLoader, string]): Promise<Message | Message[]>\n\t{\n\t\tlet command: Command = this.client.commands.find(c => Util.normalize(c.name) === Util.normalize(commandName));\n\t\tif (!command) return this.respond(message,\n\t\t\tres(s.CMD_CLEARLIMIT_UNKNOWN_COMMAND, { commandName }));\n\n\t\tconst storage: GuildStorage = message.guild.storage;\n\t\tlet limitedCommands: { [name: string]: string[] } = await storage.settings.get('limitedCommands') || {};\n\t\tdelete limitedCommands[command.name];\n\t\tstorage.settings.set('limitedCommands', limitedCommands);\n\n\t\treturn this.respond(message,\n\t\t\tres(s.CMD_CLEARLIMIT_SUCCESS, { commandName: command.name }));\n\t}\n}\n"],"sourceRoot":"../../../../src"}