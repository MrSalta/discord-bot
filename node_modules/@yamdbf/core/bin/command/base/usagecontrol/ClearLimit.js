"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const Util_1 = require("../../../util/Util");
const Command_1 = require("../../Command");
const Middleware_1 = require("../../middleware/Middleware");
const BaseStrings_1 = require("../../../localization/BaseStrings");
const CommandDecorators = require("../../CommandDecorators");
const { using, localizable } = CommandDecorators;
class default_1 extends Command_1.Command {
    constructor() {
        super({
            name: 'clearlimit',
            desc: 'Clear role restrictions from a command',
            usage: '<prefix>clearlimit <command>',
            callerPermissions: ['ADMINISTRATOR']
        });
    }
    async action(message, [res, commandName]) {
        let command = this.client.commands.find(c => Util_1.Util.normalize(c.name) === Util_1.Util.normalize(commandName));
        if (!command)
            return this.respond(message, res(BaseStrings_1.BaseStrings.CMD_CLEARLIMIT_UNKNOWN_COMMAND, { commandName }));
        const storage = message.guild.storage;
        let limitedCommands = await storage.settings.get('limitedCommands') || {};
        delete limitedCommands[command.name];
        storage.settings.set('limitedCommands', limitedCommands);
        return this.respond(message, res(BaseStrings_1.BaseStrings.CMD_CLEARLIMIT_SUCCESS, { commandName: command.name }));
    }
}
__decorate([
    using(Middleware_1.Middleware.expect({ '<command>': 'String' })),
    localizable
], default_1.prototype, "action", null);
exports.default = default_1;

//# sourceMappingURL=ClearLimit.js.map
