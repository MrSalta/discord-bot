{"version":3,"sources":["command/middleware/Localize.ts"],"names":[],"mappings":";;AAAA,kDAA+C;AAKxC,KAAK,mBAA+C,OAAgB,EAAE,IAAW;IAEvF,MAAM,EAAE,GAAY,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC;IACpD,MAAM,IAAI,GAAW,EAAE;QACtB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW;QACzB,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC;eAC9C,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;IAE7B,MAAM,GAAG,GAAmB,WAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC5D,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;AAClC,CAAC;AAVD,4BAUC","file":"Localize.js","sourcesContent":["import { Lang } from '../../localization/Lang';\nimport { Message } from '../../types/Message';\nimport { Command } from '../Command';\nimport { ResourceLoader } from '../../types/ResourceLoader';\n\nexport async function localize<T extends Command>(this: T, message: Message, args: any[]): Promise<[Message, any[]]>\n{\n\tconst dm: boolean = message.channel.type !== 'text';\n\tconst lang: string = dm\n\t\t? this.client.defaultLang\n\t\t: await message.guild.storage.settings.get('lang')\n\t\t\t|| this.client.defaultLang;\n\n\tconst res: ResourceLoader = Lang.createResourceLoader(lang);\n\treturn [message, [res, ...args]];\n}\n"],"sourceRoot":"../../../src"}