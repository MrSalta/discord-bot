[RESOLVE_TYPE]
## Only translate the return values here
{{!
	switch (args.type)
	{
		case 'User': return 'user';
		case 'Member': return 'member';
		case 'BannedUser': return 'banned user';
		case 'Channel': return 'channel';
		case 'Role': return 'role';
		default: return;
	}
!}}

[RESOLVE_ERR_RESOLVE_NUMBER]
in arg `{{ name }}`: `{{ arg }}` could not be resolved to a number.
Usage: `{{ usage }}`

[RESOLVE_ERR_RESOLVE_DURATION]
in arg `{{ name }}`: `{{ arg }}` could not be resolved to a duration.
Usage: `{{ usage }}`
Duration examples: `10m`, `2h`, `1.5d`

[RESOLVE_ERR_RESOLVE_TYPE_ID]
in arg `{{ name }}`: Failed to find a {{! res('RESOLVE_TYPE') !}} with ID `{{ arg }}`
Usage: `{{ usage }}`

[RESOLVE_ERR_RESOLVE_TYPE_TEXT]
in arg `{{ name }}`: Failed to find a {{! res('RESOLVE_TYPE') !}} containing the text `{{ arg }}`
Usage: `{{ usage }}`

[RESOLVE_ERR_MULTIPLE_USER_RESULTS]
Found multiple potential matches for arg `{{ name }}`:
{{!
	const users = args.users.split(', ');
	if (users.length > 5)
	{
		const slice = users.slice(0, 5);
		return `${slice.join(', ')}, plus ${users.length - slice.length} more.`
	}
	else return users.join(', ');
!}}
Please refine your search or consider using an ID/mention
Usage: `{{ usage }}`

[RESOLVE_ERR_MULTIPLE_CHANNEL_RESULTS]
Found multiple potential matches for arg `{{ name }}`:
{{!
	const channels = args.channels.split(', ');
	if (channels.length > 5)
	{
		const slice = channels.slice(0, 5);
		return `${slice.join(', ')}, plus ${channels.length - slice.length} more.`
	}
	else return channels.join(', ');
!}}
Please refine your search or consider using an ID/channel link
Usage: `{{ usage }}`

[RESOLVE_ERR_MULTIPLE_ROLE_RESULTS]
Found multiple potential matches for arg `{{ name }}`:
{{!
	const roles = args.roles.split(', ');
	if (roles.length > 5)
	{
		const slice = roles.slice(0, 5);
		return `${slice.join(', ')}, plus ${roles.length - slice.length} more.`
	}
	else return roles.join(', ');
!}}
Please refine your search or consider using an ID/role mention
Usage: `{{ usage }}`
